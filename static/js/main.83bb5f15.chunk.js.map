{"version":3,"sources":["images/elf-icon.png","components/AdminLogin.js","components/CreateMenuItems.js","components/ManageItems.js","components/DropDownMenu.js","components/AfterLoggedHeader.js","components/ManageOrders.js","containers/LoginContainer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","AdminLogin","props","react_default","a","createElement","className","Grid","textAlign","style","height","verticalAlign","Column","maxWidth","Header","as","color","Image","src","elf","Form","size","onSubmit","handleLoginSubmit","Segment","stacked","Input","fluid","icon","iconPosition","type","name","onChange","handleInputLogin","required","placeholder","value","loginUser","loginPassword","Button","CreateMenuItems","react","handleCreateMenuItems","textalign","Group","widths","Field","control","label","handleMenuItemsInput","step","TextArea","content","width","id","ManageItems","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateItemList","fetch","then","resp","json","setState","displayItems","updateAfterDelete","filteredItems","handleDeleteItem","ev","window","confirm","concat","target","method","setTimeout","handleShowItemForm","preventDefault","filterCategories","state","pizzaArray","filter","item","category","wingArray","beverageArray","hideItems","_this2","Popup","trigger","Card","centered","map","index","key","header","price","description","extra","onClick","negative","Component","DropDownMenu","Dropdown","Icon","Menu","vertical","href","rel","link","AfterLoggedHeader","components_DropDownMenu","handleLogout","handleToggleDisplay","ManageOrders","handleUpdateOrderList","tempOrder","tempId","tempName","tempPhone","tempTime","tempInstruction","tempPrice","allOrderLists","reverse","order","push","order_lists","toString","replace","Customer_Name","Customer_Phone","Order_Time","Special_Instruction","Total_Price","formattedOrderLists","orderListIds","customerNames","customerPhones","orderTimes","specialInstructions","totalPrices","handleButtonDisable","disabled","handleDeleteOrder","handleLiveUpdate","toggleLiveUpdate","liveUpdateText","clearInterval","toggleInterval","setInterval","buttonDisable","disableButton","_this3","toggle","active","positive","Or","panes","menuItem","render","Tab","Pane","LoginContainer","defineProperty","toLowerCase","headers","Content-Type","Accept","body","JSON","stringify","user","username","usernameInput","password","passwordInput","jwt","isLogin","user_id","alert","items","item_name","item_description","item_price","img_url","selectCategory","menu_item","toggleCreateItem","components_AfterLoggedHeader","components_CreateMenuItems","components_ManageItems","components_ManageOrders","components_AdminLogin","App","containers_LoginContainer","Boolean","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.83bb5f15.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/elf-icon.f6a00497.png\";","import React from 'react';\nimport { Button,  Form, Grid, Header, Image,Segment } from 'semantic-ui-react';\nimport elf from '../images/elf-icon.png'\nconst AdminLogin = (props)=>{\n    return(\n      <div>\n        <div className='login-form'>\n          <style>{`body > div,body > div > div,body > div > div > div.login-form {  height: 100%;}`}\n          </style>\n          <Grid textAlign='center' style={{ height: '100%' }} verticalAlign='middle'>\n            <Grid.Column style={{ maxWidth: 450 }}>\n              <Header as='h2' color='teal' textAlign='center'>\n                <Image src={elf} /> <strong>Log in to your account</strong>\n              </Header>\n              <Form size='large' onSubmit={props.handleLoginSubmit}>\n                <Segment stacked>\n                  <strong>Username:</strong>\n                  <Form.Input fluid icon='user' iconPosition='left' type='text' name='usernameInput' onChange={props.handleInputLogin} required placeholder=\"username\" value={props.loginUser}/>\n                  <strong>Password:</strong>\n                  <Form.Input  fluid  icon='lock' iconPosition='left'  type='password'\n                    name='passwordInput' onChange={props.handleInputLogin} required placeholder='password' value={props.loginPassword} />\n                  <Button color='teal' fluid size='large' type='submit' value='Log In' className=\"ui button positive\">\n                    <strong>Login</strong>\n                  </Button>\n                </Segment>\n              </Form>\n            </Grid.Column>\n          </Grid>\n        </div>\n        </div>\n    )\n}\nexport default AdminLogin;\n","import React, { Fragment} from 'react';\nimport { Form, Input, TextArea, Button } from 'semantic-ui-react';\n\nconst CreateMenuItems =(props)=>{\n  return(\n    <Fragment>\n      <Form onSubmit={props.handleCreateMenuItems}  size='large' textalign='center'>\n        <strong>Category</strong>\n        <select  name='selectCategory' >\n          <option value=\"pizza\">Pizza</option>\n          <option value=\"Wings\">Wings</option>\n          <option value=\"Beverage\">Beverage</option>\n        </select>\n        <Form.Group widths='equal'>\n          <Form.Field control={Input}  label='Item Name'  placeholder='Item Name' name='item_name' onChange={props.handleMenuItemsInput} required/>\n          <Form.Field  control={Input}  label='Price'  placeholder='Price' type='number'\n            step='0.01' name='item_price' onChange={props.handleMenuItemsInput} required/>\n          <Form.Field control={Input} label=\"Image\" placeholder=\"image url\" name='img_url' onChange={props.handleMenuItemsInput} required/>\n        </Form.Group>\n        <Form.Field control={TextArea} label='Description' placeholder='description'\n          name='item_description' onChange={props.handleMenuItemsInput}/>\n        <Form.Field  control={Button}  content='Submit' type='submit' color='teal'\n          fluid style={{width: '15%'}} id='submitItem'/>\n      </Form>\n    </Fragment>\n  )\n}\nexport default CreateMenuItems;\n","import React, {Component} from 'react';\nimport { Card, Button, Popup } from 'semantic-ui-react';\nclass ManageItems extends Component{\n  constructor(){\n    super()\n    this.state ={\n      displayItems: [],\n      hideItems: true,\n      filteredItems: []\n    }\n  }\n\n  componentDidMount(){\n    this.updateItemList()\n  }\n\n  updateItemList =()=>{\n    fetch('https://backend-metro-pizza.herokuapp.com/api/v1/menu_items')\n    .then(resp => resp.json())\n    .then(json=>{\n      this.setState({\n        displayItems: json\n      })\n    })\n  }\n\n  updateAfterDelete =()=>{\n    fetch('https://backend-metro-pizza.herokuapp.com/api/v1/menu_items')\n    .then(resp => resp.json())\n    .then(json=>{\n      this.setState({\n        filteredItems: json\n      })\n    })\n  }\n\n  handleDeleteItem = (ev)=>{\n    let x = window.confirm(\"Are you sure you want to delete this?\");\n    if (x){\n      fetch(`https://backend-metro-pizza.herokuapp.com/api/v1/menu_items/${ev.target.value}`,{  method: 'DELETE' })\n      setTimeout(this.updateAfterDelete, 2000)\n      return true;}\n    else {return false;}\n  }\n\n  handleShowItemForm = (ev)=>{\n    ev.preventDefault()\n    this.updateItemList()\n    switch (ev.target.filterCategories.value){\n\n      case 'all':\n        return this.setState({filteredItems: this.state.displayItems});\n\n      case 'pizza':\n        let pizzaArray =[]\n        pizzaArray = this.state.displayItems.filter(item =>{\n          return item.category === 'pizza'\n        })\n        this.setState({filteredItems: pizzaArray})\n        break;\n\n      case 'wing':\n        let wingArray =[]\n        wingArray = this.state.displayItems.filter(item =>{\n          return item.category === 'Wings'\n        })\n        this.setState({filteredItems: wingArray})\n        break;\n\n      case 'beverage':\n        let beverageArray =[]\n        beverageArray = this.state.displayItems.filter(item =>{\n          return item.category === 'Beverage'\n        })\n        this.setState({filteredItems: beverageArray})\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  render(){\n      return(\n        <div className='manageItemList'>\n          <form onSubmit={this.handleShowItemForm}>\n            <strong>Filter:</strong>  <select name='filterCategories'>\n              <option value='all'>All</option>\n              <option value='pizza'>Pizza</option>\n              <option value='wing'>Wings</option>\n              <option value='beverage'>Beverage</option>\n            </select>\n            {' '}\n            <Popup content=\"Display existing menu items, may use with filter\" trigger={<Button color='teal'>Show items</Button>}/>\n\n          </form>  <br/>\n          <Card.Group centered>\n            {\n              this.state.filteredItems.map((item, index) =>{\n                return  <Card key={index} header=<div>{item.name} - $ {item.price}</div>\n                  description=<div>category: {item.category}<br/> id: {item.id}</div> extra=<Button onClick={this.handleDeleteItem} value={item.id} negative>Delete</Button>/> })\n            }\n          </Card.Group>\n        </div>)\n\n  }\n}\nexport default ManageItems\n","import React from 'react';\nimport {Dropdown, Button, Icon} from 'semantic-ui-react';\n\nconst DropDownMenu =(props)=>{\n  return(\n  <div id='menuIcon'>\n      <Dropdown icon=<Icon  name='bars' size='large' ></Icon> >\n        <Dropdown.Menu id=\"dropdown_background\">\n          <Button.Group vertical>\n          <a href=\"https://yongliang24.github.io/frontend_customers_metro_pizza/\" target=\"_blank\" rel=\"noopener noreferrer\"><Button>Visit Pizza Order Site</Button></a>\n          </Button.Group><hr/>\n          <a href=\"https://github.com/YongLiang24\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <Icon name=\"github\" size='large' link/></a>\n          <a href=\"https://www.linkedin.com/in/yongliang24/\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <Icon name=\"linkedin\" size='large' link/></a>\n        </Dropdown.Menu>\n      </Dropdown>\n  </div>\n  )\n}\nexport default DropDownMenu;\n","import React from 'react';\nimport { Header, Popup } from 'semantic-ui-react';\nimport DropDownMenu from './DropDownMenu'\nconst AfterLoggedHeader = (props)=>{\n  return(\n    <div>\n      <Header as='h1' textAlign='center' color='brown'>\n        <DropDownMenu/>\n        Metro Pizza Management Center<br/>\n        <button onClick={props.handleLogout} className=\"small ui button primary\">Logout</button>\n      </Header>\n      <hr />\n      <Header textAlign='center'>\n        <div className=\"ui small buttons \" >\n          <Popup content=\"New Orders will display in this section\" trigger={  <button className=\"ui button active teal\"  value='viewOrders' onClick={props.handleToggleDisplay}>View Orders</button>}/>\n          <div className=\"or\"></div>\n          <Popup content=\"Menu items can be created or deleted in this section\" trigger={<button className=\"ui button teal\" value='createItemForm' onClick={props.handleToggleDisplay}>Create Items</button>}/>\n        </div>\n      </Header>\n    </div>\n  )\n}\nexport default AfterLoggedHeader;\n","import React, {Component} from 'react';\nimport { Card, Button, Popup } from 'semantic-ui-react';\nclass ManageOrders extends Component{\n  constructor(){\n    super()\n    this.state={\n      allOrderLists: [],\n      formattedOrderLists: [],\n      buttonDisable: false,\n      orderListIds: [],\n      toggleLiveUpdate: false,\n      liveUpdateText: 'Off',\n      toggleInterval: '',\n      customerNames: [],\n      customerPhones: [],\n      specialInstructions: [],\n      totalPrices: [],\n      orderTimes: [],\n      disableButton: false\n    }\n  }\n  componentDidMount(){\n    fetch('https://backend-metro-pizza.herokuapp.com/api/v1/orders')\n    .then(resp => resp.json())\n    .then(json=>{\n      const tempOrder = [];\n      const tempId = [];\n      const tempName = [];\n      const tempPhone = [];\n      const tempTime =[];\n      const tempInstruction = [];\n      const tempPrice =[]\n      this.setState({allOrderLists: json})\n      this.state.allOrderLists.reverse()\n      this.state.allOrderLists.map((order, index)=>{\n          tempOrder.push(order.order_lists.toString().replace(/=>/g, \": \").replace(/{/g, \"\").replace(/}/g, \"\").replace(/,/g, \" || \").replace(/\"/g, \"\"));\n         tempId.push(json[index].id);\n         tempName.push(this.state.allOrderLists[index].Customer_Name);\n         tempPhone.push(this.state.allOrderLists[index].Customer_Phone);\n         tempTime.push(this.state.allOrderLists[index].Order_Time);\n         tempInstruction.push(this.state.allOrderLists[index].Special_Instruction);\n         tempPrice.push(this.state.allOrderLists[index].Total_Price);\n         return null;\n      })\n      this.setState({\n        formattedOrderLists: tempOrder,\n        orderListIds: tempId,\n        customerNames: tempName,\n        customerPhones: tempPhone,\n        orderTimes: tempTime,\n        specialInstructions: tempInstruction,\n        totalPrices: tempPrice\n       })\n    })\n    this.handleLiveUpdate()\n  }\n\n  componentWillUnmount(){\n    clearInterval(this.state.toggleInterval)\n  }\n\n  handleUpdateOrderList = ()=>{\n    fetch('https://backend-metro-pizza.herokuapp.com/api/v1/orders')\n    .then(resp => resp.json())\n    .then(json=>{\n      const tempOrder = [];\n      const tempId = [];\n      const tempName = [];\n      const tempPhone = [];\n      const tempTime =[];\n      const tempInstruction = [];\n      const tempPrice =[]\n      this.setState({allOrderLists: json})\n      this.state.allOrderLists.reverse()\n      this.state.allOrderLists.map((order, index)=>{\n          tempOrder.push(order.order_lists.toString().replace(/=>/g, \": \").replace(/{/g, \"\").replace(/}/g, \"\").replace(/,/g, \" || \").replace(/\"/g, \"\"));\n         tempId.push(json[index].id);\n         tempName.push(this.state.allOrderLists[index].Customer_Name);\n         tempPhone.push(this.state.allOrderLists[index].Customer_Phone);\n         tempTime.push(this.state.allOrderLists[index].Order_Time);\n         tempInstruction.push(this.state.allOrderLists[index].Special_Instruction);\n         tempPrice.push(this.state.allOrderLists[index].Total_Price);\n         return null;\n      })\n      this.setState({\n        formattedOrderLists: tempOrder,\n        orderListIds: tempId,\n        customerNames: tempName,\n        customerPhones: tempPhone,\n        orderTimes: tempTime,\n        specialInstructions: tempInstruction,\n        totalPrices: tempPrice\n       })\n    })\n  }\n\n  handleButtonDisable = (ev)=>{\n    if(ev.target.value){\n      ev.target.disabled = true\n      ev.target.className = 'secondary ui  button'\n    }\n\n  }\n\n  handleDeleteOrder = (ev)=>{\n    const x = window.confirm(\"Are you sure you want to delete this?\");\n    if (x){\n      fetch(`https://backend-metro-pizza.herokuapp.com/api/v1/orders/${ev.target.name}`,{\n        method: 'DELETE'});\n      setTimeout(this.handleUpdateOrderList, 2000);\n      return true;\n    }\n    else {\n      return false;\n    }\n  }\n\n  handleLiveUpdate = (ev)=>{\n    this.setState({ toggleLiveUpdate: !this.state.toggleLiveUpdate })\n    if(this.state.toggleLiveUpdate){\n      this.setState({liveUpdateText: 'Off'})\n      clearInterval(this.state.toggleInterval)\n    }\n    else{\n      this.setState({liveUpdateText: 'On', toggleInterval: setInterval(this.handleUpdateOrderList, 4000)})\n    }\n  }\n\n  render(){\n    return(\n      <div id=\"order_div\">\n        <Popup content=\"Turn LiveUpdate off to stop receiving new orders\" trigger={<Button toggle   active={this.state.toggleLiveUpdate} onClick={this.handleLiveUpdate}>\n          Live Update {this.state.liveUpdateText}</Button>}/>\n        <br/><br/>\n        <Card.Group centered>\n          {\n            this.state.formattedOrderLists.map((order, index)=>{\n              return <Card key={index} id='order_card'\n                header=<div><strong>Customer Name: {this.state.customerNames[index]} || Phone: {this.state.customerPhones[index]} || Time: {this.state.orderTimes[index]}</strong><hr/></div>\n                description=<div><strong>Items: - {order}</strong><hr/>Notes:<br/> {this.state.specialInstructions[index]}<br/><br/>Total Cost: ${this.state.totalPrices[index]}</div>\n                extra=<Button.Group> <Button positive onClick={this.handleButtonDisable} value={index}>Mark Order</Button> <Button.Or />\n                  <Button  onClick={this.handleDeleteOrder} name={this.state.orderListIds[index]}>Delete Order</Button>\n                </Button.Group> /> })\n          }\n        </Card.Group>\n      </div>\n    )\n  }\n}\n\nexport default ManageOrders;\n","import React, {Component } from 'react';\nimport AdminLogin from '../components/AdminLogin';\nimport CreateMenuItems from '../components/CreateMenuItems';\nimport ManageItems from '../components/ManageItems';\nimport {Header, Tab, Icon} from 'semantic-ui-react';\nimport AfterLoggedHeader from '../components/AfterLoggedHeader';\nimport ManageOrders from '../components/ManageOrders';\nimport DropDownMenu from '../components/DropDownMenu';\n\nconst panes = [\n    {menuItem: {icon: 'users', content: 'User Account', key: 'users'},\n    render:() => <Tab.Pane><p className='about_p'><strong>Demo Account</strong><br/><strong>Username:</strong> metro <br/><strong>Password:</strong> pizza</p></Tab.Pane> },\n    {menuItem:{icon: 'book', content: 'About Page', key: 'book' }, render: () => <Tab.Pane><p className='about_p'>Metro Pizza Management Center allows administrators<br/> to create or delete menu items for <a href=\"https://yongliang24.github.io/frontend_customers_metro_pizza/\" target=\"_blank\" rel=\"noopener noreferrer\">Metro Pizza</a> site,<br/> as well as receive online orders in real time and manage such orders.<br/> This site was built with React.js and Semantic UI for User Interface and Ruby on Rails as backend.</p></Tab.Pane>}\n  ]\n\nclass LoginContainer extends Component{\n  constructor(){\n    super()\n    this.state ={isLogin: false,usernameInput: 'metro',passwordInput: 'pizza',item_name: '',\n      item_description: '',item_price: 0,img_url: '',user_id: 0,toggleCreateItem: false}\n  }\n\n  handleInputLogin = (ev)=>{\n    this.setState({[ev.target.name]: ev.target.value.toLowerCase()})\n  }\n\n  handleLoginSubmit = (ev)=>{\n    ev.preventDefault()\n    fetch('https://backend-metro-pizza.herokuapp.com/api/v1/login',{\n      method: 'POST',\n      headers: {'Content-Type': 'application/json', Accept: 'application/json'},\n      body: JSON.stringify({ user: {username: this.state.usernameInput,password: this.state.passwordInput} })\n      })\n      .then(resp => resp.json())\n      .then(json =>{\n        if(json.jwt){\n          this.setState({isLogin: true,user_id: json.user.id})\n        }\n        else{\n          alert('Incorrect username or password')\n        }\n      })}\n\n  handleLogout = ()=>{\n    this.setState({isLogin: false})\n  }\n\n  handleMenuItemsInput =(ev)=>{\n    this.setState({[ev.target.name]: ev.target.value})\n  }\n\n  handleCreateMenuItems =(ev)=>{\n    ev.preventDefault()\n    const items ={\n      name: this.state.item_name,\n      description: this.state.item_description,\n      price: this.state.item_price,\n      img_url: this.state.img_url,\n      user_id: this.state.user_id,\n      category: ev.target.selectCategory.value\n    }\n    fetch(\"https://backend-metro-pizza.herokuapp.com/api/v1/menu_items\",{\n      method: 'POST',\n      headers:{'Content-Type': 'application/json',  Accept: 'application/json' },\n      body: JSON.stringify({menu_item: items})\n    })\n    .then(alert(\"Item has been added\"))\n  }\n\n  handleToggleDisplay =(ev)=>{\n    if(ev.target.value === 'createItemForm'){\n      this.setState({toggleCreateItem: true})\n    }\n    else if(ev.target.value === 'viewOrders'){\n      this.setState({toggleCreateItem: false})\n    }\n  }\n\n  render(){\n    if(this.state.isLogin){\n      if(this.state.toggleCreateItem){\n        return(\n          <div>\n            <AfterLoggedHeader handleLogout={this.handleLogout} handleToggleDisplay={this.handleToggleDisplay}/>\n            <CreateMenuItems handleMenuItemsInput={this.handleMenuItemsInput} handleCreateMenuItems={this.handleCreateMenuItems}/><hr/>\n            <ManageItems />\n          </div>\n        )\n      }else{\n        return(\n          <div>\n            <AfterLoggedHeader handleLogout={this.handleLogout} handleToggleDisplay={this.handleToggleDisplay}/>\n            <ManageOrders />\n          </div>\n        )\n      }}\n    else{\n      return (\n        <div>\n          <Header as='h1' textAlign='center' color='brown'>\n            <DropDownMenu/>\n            <strong>Metro Pizza Management Center</strong>\n          </Header> <hr/>\n          <AdminLogin handleLoginSubmit={this.handleLoginSubmit} handleInputLogin={this.handleInputLogin} loginUser={this.state.usernameInput} loginPassword={this.state.passwordInput}/>\n          <Tab panes={panes} id=\"tab_menu\"/>\n        </div>\n      )\n    }\n  }}\n\nexport default LoginContainer;\n","import React from 'react';\nimport './App.css';\nimport LoginContainer from './containers/LoginContainer';\nfunction App() {\n  return (\n    <div>\n    <LoginContainer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}